apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
spec:
  selector:
    matchLabels:
      app: mongo
  serviceName: "mongo"
  replicas: 3
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - name: mongodb
        image: mongo:latest
        command:
        - mongod
        - --replSet
        - rs0
        ports:
        - containerPort: 27017
          name: peer
        livenessProbe:
          exec:
            command:
            - /usr/bin/mongo
            - --eval
            - db.serverStatus()
          initialDelaySeconds: 10
          timeoutSeconds: 10
        volumeMounts:
        - name: database
          mountPath: /data/db
      # This container initializes the mongodb server, then sleeps.
      - name: init-mongo
        image: mongo:latest
        command:
        - bash
        - /config/init.sh
        volumeMounts:
        - name: config
          mountPath: /config
      volumes:
      - name: config
        configMap:
          name: "mongo-init"
    # I need to have an actual persistent volume to connect to
    #volumeClaimTemplates:
    #- metadata:
    #  name: database
    #annotations:
    #    volume.alpha.kubernetes.io/storage-class: anything
    #  spec:
    #    accessModes: [ "ReadWriteOnce" ]
    #    resources:
    #      requests:
    #        storage: 5Gi